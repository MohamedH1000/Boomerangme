// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  firstName String
  lastName String
  company String?
  phone String?
  email String? @unique
  emailVerified DateTime?
  image String?
  hashedPassword String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  plan String
  role String?

  accounts Account[]
  cards Cards[]
}

model Account {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  type String
  provider String
  providerAccountId String
  refresh_token String? @db.String
  access_token String? @db.String
  expires_at Int?
  token_type String?
  scope String?
  id_token String? @db.String
  session_state String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Cards {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  cardType String
  cardEndDate DateTime
  stampLife DateTime
  location String?
  language String?
  dateFormat String?
  purchaseAmount Boolean?
  privacyPolicy Boolean?
  numOfCards Int?
  numOfStamps Int?
  analytics String?
  stampCount Int
  activeStamp String
  inActiveStamp String
  logo String?
  icon String?
  backgroundUnderStamps String?
  cardBackGround String
  stampBackGround String
  activeStampColor String
  backgroundUnderStampsColor String
  cardTextColor String
  cardOutlineColor String
  inActiveStampColor String
  barCodeType String
  cardDescription String
  howEarnStamp String
  companyName String
  rewardDetails String
  earnStampMessage String
  earnRewardMessage String
  reedemReward Boolean
  multiRewards String
  createdAt DateTime @default(now())
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}
